
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports various common sort, input & filter types that are not directly linked to a particular model.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import type * as Prisma from "./internal/prismaNamespace"


export type StringFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  mode?: Prisma.QueryMode | runtime.Types.Skip
  not?: Prisma.NestedStringFilter<$PrismaModel> | string | runtime.Types.Skip
}

export type StringNullableFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  mode?: Prisma.QueryMode | runtime.Types.Skip
  not?: Prisma.NestedStringNullableFilter<$PrismaModel> | string | null | runtime.Types.Skip
}

export type EnumGenderFilter<$PrismaModel = never> = {
  equals?: $Enums.Gender | Prisma.EnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Gender[] | Prisma.ListEnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Gender[] | Prisma.ListEnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGenderFilter<$PrismaModel> | $Enums.Gender | runtime.Types.Skip
}

export type DateTimeNullableFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null | runtime.Types.Skip
}

export type EnumLocationFilter<$PrismaModel = never> = {
  equals?: $Enums.Location | Prisma.EnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Location[] | Prisma.ListEnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Location[] | Prisma.ListEnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumLocationFilter<$PrismaModel> | $Enums.Location | runtime.Types.Skip
}

export type EnumRoleFilter<$PrismaModel = never> = {
  equals?: $Enums.Role | Prisma.EnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumRoleFilter<$PrismaModel> | $Enums.Role | runtime.Types.Skip
}

export type BoolFilter<$PrismaModel = never> = {
  equals?: boolean | Prisma.BooleanFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedBoolFilter<$PrismaModel> | boolean | runtime.Types.Skip
}

export type DateTimeFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeFilter<$PrismaModel> | Date | string | runtime.Types.Skip
}

export type SortOrderInput = {
  sort: Prisma.SortOrder
  nulls?: Prisma.NullsOrder | runtime.Types.Skip
}

export type StringWithAggregatesFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  mode?: Prisma.QueryMode | runtime.Types.Skip
  not?: Prisma.NestedStringWithAggregatesFilter<$PrismaModel> | string | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedStringFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedStringFilter<$PrismaModel> | runtime.Types.Skip
}

export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  mode?: Prisma.QueryMode | runtime.Types.Skip
  not?: Prisma.NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedStringNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedStringNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumGenderWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Gender | Prisma.EnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Gender[] | Prisma.ListEnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Gender[] | Prisma.ListEnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGenderWithAggregatesFilter<$PrismaModel> | $Enums.Gender | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumGenderFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumGenderFilter<$PrismaModel> | runtime.Types.Skip
}

export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedDateTimeNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedDateTimeNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumLocationWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Location | Prisma.EnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Location[] | Prisma.ListEnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Location[] | Prisma.ListEnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumLocationWithAggregatesFilter<$PrismaModel> | $Enums.Location | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumLocationFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumLocationFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Role | Prisma.EnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumRoleFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumRoleFilter<$PrismaModel> | runtime.Types.Skip
}

export type BoolWithAggregatesFilter<$PrismaModel = never> = {
  equals?: boolean | Prisma.BooleanFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedBoolWithAggregatesFilter<$PrismaModel> | boolean | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedBoolFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedBoolFilter<$PrismaModel> | runtime.Types.Skip
}

export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedDateTimeFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedDateTimeFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumFitnessLevelFilter<$PrismaModel = never> = {
  equals?: $Enums.FitnessLevel | Prisma.EnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.FitnessLevel[] | Prisma.ListEnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.FitnessLevel[] | Prisma.ListEnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumFitnessLevelFilter<$PrismaModel> | $Enums.FitnessLevel | runtime.Types.Skip
}

export type EnumExerciseFilter<$PrismaModel = never> = {
  equals?: $Enums.Exercise | Prisma.EnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Exercise[] | Prisma.ListEnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Exercise[] | Prisma.ListEnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumExerciseFilter<$PrismaModel> | $Enums.Exercise | runtime.Types.Skip
}

export type EnumTrainingTimeFilter<$PrismaModel = never> = {
  equals?: $Enums.TrainingTime | Prisma.EnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumTrainingTimeFilter<$PrismaModel> | $Enums.TrainingTime | runtime.Types.Skip
}

export type IntFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntFilter<$PrismaModel> | number | runtime.Types.Skip
}

export type EnumFitnessLevelWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.FitnessLevel | Prisma.EnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.FitnessLevel[] | Prisma.ListEnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.FitnessLevel[] | Prisma.ListEnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumFitnessLevelWithAggregatesFilter<$PrismaModel> | $Enums.FitnessLevel | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumFitnessLevelFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumFitnessLevelFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumExerciseWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Exercise | Prisma.EnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Exercise[] | Prisma.ListEnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Exercise[] | Prisma.ListEnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumExerciseWithAggregatesFilter<$PrismaModel> | $Enums.Exercise | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumExerciseFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumExerciseFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumTrainingTimeWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.TrainingTime | Prisma.EnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumTrainingTimeWithAggregatesFilter<$PrismaModel> | $Enums.TrainingTime | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumTrainingTimeFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumTrainingTimeFilter<$PrismaModel> | runtime.Types.Skip
}

export type IntWithAggregatesFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntWithAggregatesFilter<$PrismaModel> | number | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _avg?: Prisma.NestedFloatFilter<$PrismaModel> | runtime.Types.Skip
  _sum?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumTrainingTimeNullableFilter<$PrismaModel = never> = {
  equals?: $Enums.TrainingTime | Prisma.EnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedEnumTrainingTimeNullableFilter<$PrismaModel> | $Enums.TrainingTime | null | runtime.Types.Skip
}

export type IntNullableFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntNullableFilter<$PrismaModel> | number | null | runtime.Types.Skip
}

export type BoolNullableFilter<$PrismaModel = never> = {
  equals?: boolean | Prisma.BooleanFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedBoolNullableFilter<$PrismaModel> | boolean | null | runtime.Types.Skip
}

export type EnumTrainingTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.TrainingTime | Prisma.EnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedEnumTrainingTimeNullableWithAggregatesFilter<$PrismaModel> | $Enums.TrainingTime | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumTrainingTimeNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumTrainingTimeNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _avg?: Prisma.NestedFloatNullableFilter<$PrismaModel> | runtime.Types.Skip
  _sum?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: boolean | Prisma.BooleanFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedBoolNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedBoolNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type EnumPaymentMethodFilter<$PrismaModel = never> = {
  equals?: $Enums.PaymentMethod | Prisma.EnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod | runtime.Types.Skip
}

export type EnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.PaymentMethod | Prisma.EnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumPaymentMethodFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumPaymentMethodFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedStringFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedStringFilter<$PrismaModel> | string | runtime.Types.Skip
}

export type NestedStringNullableFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedStringNullableFilter<$PrismaModel> | string | null | runtime.Types.Skip
}

export type NestedEnumGenderFilter<$PrismaModel = never> = {
  equals?: $Enums.Gender | Prisma.EnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Gender[] | Prisma.ListEnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Gender[] | Prisma.ListEnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGenderFilter<$PrismaModel> | $Enums.Gender | runtime.Types.Skip
}

export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null | runtime.Types.Skip
}

export type NestedEnumLocationFilter<$PrismaModel = never> = {
  equals?: $Enums.Location | Prisma.EnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Location[] | Prisma.ListEnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Location[] | Prisma.ListEnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumLocationFilter<$PrismaModel> | $Enums.Location | runtime.Types.Skip
}

export type NestedEnumRoleFilter<$PrismaModel = never> = {
  equals?: $Enums.Role | Prisma.EnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumRoleFilter<$PrismaModel> | $Enums.Role | runtime.Types.Skip
}

export type NestedBoolFilter<$PrismaModel = never> = {
  equals?: boolean | Prisma.BooleanFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedBoolFilter<$PrismaModel> | boolean | runtime.Types.Skip
}

export type NestedDateTimeFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeFilter<$PrismaModel> | Date | string | runtime.Types.Skip
}

export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedStringWithAggregatesFilter<$PrismaModel> | string | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedStringFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedStringFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedIntFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntFilter<$PrismaModel> | number | runtime.Types.Skip
}

export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: string | Prisma.StringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  contains?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  startsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  endsWith?: string | Prisma.StringFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedStringNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedStringNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedIntNullableFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntNullableFilter<$PrismaModel> | number | null | runtime.Types.Skip
}

export type NestedEnumGenderWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Gender | Prisma.EnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Gender[] | Prisma.ListEnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Gender[] | Prisma.ListEnumGenderFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumGenderWithAggregatesFilter<$PrismaModel> | $Enums.Gender | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumGenderFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumGenderFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedDateTimeNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedDateTimeNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedEnumLocationWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Location | Prisma.EnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Location[] | Prisma.ListEnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Location[] | Prisma.ListEnumLocationFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumLocationWithAggregatesFilter<$PrismaModel> | $Enums.Location | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumLocationFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumLocationFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Role | Prisma.EnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Role[] | Prisma.ListEnumRoleFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumRoleFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumRoleFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
  equals?: boolean | Prisma.BooleanFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedBoolWithAggregatesFilter<$PrismaModel> | boolean | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedBoolFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedBoolFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
  equals?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: Date[] | string[] | Prisma.ListDateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: Date | string | Prisma.DateTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedDateTimeFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedDateTimeFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedEnumFitnessLevelFilter<$PrismaModel = never> = {
  equals?: $Enums.FitnessLevel | Prisma.EnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.FitnessLevel[] | Prisma.ListEnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.FitnessLevel[] | Prisma.ListEnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumFitnessLevelFilter<$PrismaModel> | $Enums.FitnessLevel | runtime.Types.Skip
}

export type NestedEnumExerciseFilter<$PrismaModel = never> = {
  equals?: $Enums.Exercise | Prisma.EnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Exercise[] | Prisma.ListEnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Exercise[] | Prisma.ListEnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumExerciseFilter<$PrismaModel> | $Enums.Exercise | runtime.Types.Skip
}

export type NestedEnumTrainingTimeFilter<$PrismaModel = never> = {
  equals?: $Enums.TrainingTime | Prisma.EnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumTrainingTimeFilter<$PrismaModel> | $Enums.TrainingTime | runtime.Types.Skip
}

export type NestedEnumFitnessLevelWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.FitnessLevel | Prisma.EnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.FitnessLevel[] | Prisma.ListEnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.FitnessLevel[] | Prisma.ListEnumFitnessLevelFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumFitnessLevelWithAggregatesFilter<$PrismaModel> | $Enums.FitnessLevel | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumFitnessLevelFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumFitnessLevelFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedEnumExerciseWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.Exercise | Prisma.EnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.Exercise[] | Prisma.ListEnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.Exercise[] | Prisma.ListEnumExerciseFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumExerciseWithAggregatesFilter<$PrismaModel> | $Enums.Exercise | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumExerciseFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumExerciseFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedEnumTrainingTimeWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.TrainingTime | Prisma.EnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumTrainingTimeWithAggregatesFilter<$PrismaModel> | $Enums.TrainingTime | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumTrainingTimeFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumTrainingTimeFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntWithAggregatesFilter<$PrismaModel> | number | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _avg?: Prisma.NestedFloatFilter<$PrismaModel> | runtime.Types.Skip
  _sum?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedFloatFilter<$PrismaModel = never> = {
  equals?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: number[] | Prisma.ListFloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: number[] | Prisma.ListFloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lt?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedFloatFilter<$PrismaModel> | number | runtime.Types.Skip
}

export type NestedEnumTrainingTimeNullableFilter<$PrismaModel = never> = {
  equals?: $Enums.TrainingTime | Prisma.EnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedEnumTrainingTimeNullableFilter<$PrismaModel> | $Enums.TrainingTime | null | runtime.Types.Skip
}

export type NestedBoolNullableFilter<$PrismaModel = never> = {
  equals?: boolean | Prisma.BooleanFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedBoolNullableFilter<$PrismaModel> | boolean | null | runtime.Types.Skip
}

export type NestedEnumTrainingTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.TrainingTime | Prisma.EnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: $Enums.TrainingTime[] | Prisma.ListEnumTrainingTimeFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedEnumTrainingTimeNullableWithAggregatesFilter<$PrismaModel> | $Enums.TrainingTime | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumTrainingTimeNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumTrainingTimeNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: number | Prisma.IntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.IntFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _avg?: Prisma.NestedFloatNullableFilter<$PrismaModel> | runtime.Types.Skip
  _sum?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedFloatNullableFilter<$PrismaModel = never> = {
  equals?: number | Prisma.FloatFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  in?: number[] | Prisma.ListFloatFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  notIn?: number[] | Prisma.ListFloatFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  lt?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  lte?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gt?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  gte?: number | Prisma.FloatFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedFloatNullableFilter<$PrismaModel> | number | null | runtime.Types.Skip
}

export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
  equals?: boolean | Prisma.BooleanFieldRefInput<$PrismaModel> | null | runtime.Types.Skip
  not?: Prisma.NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null | runtime.Types.Skip
  _count?: Prisma.NestedIntNullableFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedBoolNullableFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedBoolNullableFilter<$PrismaModel> | runtime.Types.Skip
}

export type NestedEnumPaymentMethodFilter<$PrismaModel = never> = {
  equals?: $Enums.PaymentMethod | Prisma.EnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod | runtime.Types.Skip
}

export type NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
  equals?: $Enums.PaymentMethod | Prisma.EnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  in?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  notIn?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel> | runtime.Types.Skip
  not?: Prisma.NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod | runtime.Types.Skip
  _count?: Prisma.NestedIntFilter<$PrismaModel> | runtime.Types.Skip
  _min?: Prisma.NestedEnumPaymentMethodFilter<$PrismaModel> | runtime.Types.Skip
  _max?: Prisma.NestedEnumPaymentMethodFilter<$PrismaModel> | runtime.Types.Skip
}


